#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π RAG —Å–∏—Å—Ç–µ–º—ã
"""

import requests
import json
import time
import yaml

def load_config():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    with open("config.yaml", 'r', encoding='utf-8') as f:
        return yaml.safe_load(f)

CONFIG = load_config()
SERVER_CONFIG = CONFIG.get('server', {})
BASE_URL = f"http://{SERVER_CONFIG.get('host', 'localhost')}:{SERVER_CONFIG.get('port', 8000)}"

def test_api_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API"""
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω!")
            print(f"üìä –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {data['total_docs']}")
            print(f"üõ†Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏: {list(data['frameworks'].keys())}")
            return True
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False

def test_frameworks_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤"""
    try:
        response = requests.get(f"{BASE_URL}/frameworks")
        if response.status_code == 200:
            data = response.json()
            print("\nüõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏:")
            for name, info in data.items():
                print(f"  {name}: {info['name']} ({info['type']})")
                print(f"    {info.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_stats():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    try:
        response = requests.get(f"{BASE_URL}/stats")
        if response.status_code == 200:
            data = response.json()
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
            print(f"  –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {data['total_documents']}")
            print(f"  –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {data['cache_size']}")
            print("  –ü–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞–º:")
            for framework, count in data['frameworks'].items():
                print(f"    {framework.upper()}: {count}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def ask_question(question, framework=None, context=None, show_details=True):
    """–ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å RAG —Å–∏—Å—Ç–µ–º–µ"""
    try:
        payload = {"question": question}
        if framework:
            payload["framework"] = framework
        if context:
            payload["context"] = context
            
        start_time = time.time()
        response = requests.post(f"{BASE_URL}/ask", json=payload)
        request_time = time.time() - start_time
        
        if response.status_code == 200:
            data = response.json()
            framework_info = f" [{framework.upper()}]" if framework else ""
            print(f"\n‚ùì –í–æ–ø—Ä–æ—Å{framework_info}: {question}")
            print(f"‚úÖ –û—Ç–≤–µ—Ç: {data['answer']}")
            
            if show_details:
                print(f"‚ö° –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {data['response_time']:.2f}s (–∑–∞–ø—Ä–æ—Å: {request_time:.2f}s)")
                print(f"üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ñ—Ä–µ–π–º–≤–æ—Ä–∫: {data.get('framework_detected', 'N/A')}")
                print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {data['total_docs']}")
                print("üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
                for i, source in enumerate(data['sources'][:3], 1):
                    print(f"  {i}. [{source['framework']}] {source['source']} - {source['heading']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
            print(response.text)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_ide_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º IDE –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢: IDE –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")
    print("="*60)
    
    # –¢–µ—Å—Ç 1: Vue —Ñ–∞–π–ª
    vue_request = {
        "question": "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å reactive ref?",
        "file_path": "/src/components/MyComponent.vue",
        "file_content": "<template><div>{{count}}</div></template>",
        "quick_mode": True
    }
    
    try:
        response = requests.post(f"{BASE_URL}/ide/ask", json=vue_request)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Vue —Ñ–∞–π–ª - –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞:")
            print(f"   –û–ø—Ä–µ–¥–µ–ª–µ–Ω: {data.get('framework_detected')}")
            print(f"   –û—Ç–≤–µ—Ç: {data['answer'][:100]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ IDE –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ IDE —Ç–µ—Å—Ç–∞: {e}")
    
    # –¢–µ—Å—Ç 2: Laravel —Ñ–∞–π–ª
    laravel_request = {
        "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –º–æ–¥–µ–ª—å?",
        "file_path": "/app/Models/User.php",
        "file_content": "<?php class User extends Model {}",
        "quick_mode": False
    }
    
    try:
        response = requests.post(f"{BASE_URL}/ide/ask", json=laravel_request)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Laravel —Ñ–∞–π–ª - –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞:")
            print(f"   –û–ø—Ä–µ–¥–µ–ª–µ–Ω: {data.get('framework_detected')}")
            print(f"   –û—Ç–≤–µ—Ç: {data['answer'][:100]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ IDE –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ IDE —Ç–µ—Å—Ç–∞: {e}")

def test_cache():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("="*60)
    
    question = "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å?"
    
    # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å
    start_time = time.time()
    ask_question(question, show_details=False)
    first_time = time.time() - start_time
    
    # –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ –∫—ç—à–∞)
    start_time = time.time()
    ask_question(question, show_details=False)
    second_time = time.time() - start_time
    
    print(f"‚ö° –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å: {first_time:.2f}s")
    print(f"‚ö° –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å: {second_time:.2f}s")
    print(f"üöÄ –£—Å–∫–æ—Ä–µ–Ω–∏–µ: {(first_time/second_time):.1f}x" if second_time > 0 else "N/A")

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π RAG —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 70)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if not test_api_connection():
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ rag_server_new.py –∑–∞–ø—É—â–µ–Ω.")
        return
    
    # –¢–µ—Å—Ç 2: –§—Ä–µ–π–º–≤–æ—Ä–∫–∏
    test_frameworks_endpoint()
    
    # –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    test_stats()
    
    # –¢–µ—Å—Ç 4: –û–±—ã—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢: –û–±—ã—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
    print("="*60)
    
    questions = [
        ("–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç?", None),
        ("–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å Eloquent –º–æ–¥–µ–ª—å?", "laravel"),
        ("–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Composition API?", "vue"),
    ]
    
    for question, framework in questions:
        ask_question(question, framework)
        time.sleep(0.5)
    
    # –¢–µ—Å—Ç 5: IDE –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
    test_ide_integration()
    
    # –¢–µ—Å—Ç 6: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    if CONFIG.get('cache', {}).get('enabled', True):
        test_cache()
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    try:
        response = requests.delete(f"{BASE_URL}/cache")
        if response.status_code == 200:
            print("\nüóëÔ∏è –ö—ç—à –æ—á–∏—â–µ–Ω")
    except:
        pass
    
    print("\n" + "="*70)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üéØ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("üí° –î–ª—è IDE –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π endpoint /ide/ask")

if __name__ == "__main__":
    main()